import pandas as pd
from sklearn.model_selection import train_test_split
import seaborn as sns
import numpy as np

df=pd.read_csv("uber.csv")

df.isnull().sum()

df.dropna(inplace=True)

df.info()

df["pickup_datetime"]=pd.to_datetime(df["pickup_datetime"])

sns.boxplot(df["fare_amount"],orient='h')

lb=df["fare_amount"].quantile(0.01)
ub=df["fare_amount"].quantile(0.99)

df=df[(df["fare_amount"]> lb) & (df['fare_amount']<ub)]


x=df.drop("fare_amount",axis=1)
y=df["fare_amount"]

x["pickup_datetime"]=pd.to_numeric(pd.to_datetime(x["pickup_datetime"]))
x=x.loc[:,x.columns.str.contains("^Unnamed")]

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)

from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(x_train,y_train)

y_pred=lr.predict(x_test)

from sklearn.metrics import mean_squared_error
rmse=np.sqrt(mean_squared_error(y_pred,y_test))
rmse

from sklearn.ensemble import RandomForestRegressor

rf=RandomForestRegressor(n_estimators=50,random_state=45)
rf.fit(x_train,y_train)
y_pred2=rf.predict(x_test)


rmse2=np.sqrt(mean_squared_error(y_pred2,y_test))
rmse2